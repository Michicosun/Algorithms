{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red28\green0\blue207;\red63\green110\blue116;
\red46\green13\blue110;\red38\green71\blue75;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c14900\c27800\c29400;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cassert>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  Line\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k, b;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     Line(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k = \cf8 0\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  b = \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 k\cf6  = k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 b\cf6  = b;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 double\cf6  getY(\cf5 long\cf6  \cf5 double\cf6  x)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  \cf9 k\cf6  * x + \cf9 b\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 long\cf6  \cf5 double\cf6  intersect(\cf9 Line\cf6  & a, \cf9 Line\cf6  & b)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  ((\cf5 long\cf6  \cf5 double\cf6 )(a.\cf9 b\cf6  - b.\cf9 b\cf6 ) / (b.\cf9 k\cf6  - a.\cf9 k\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  convexHallTrick\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf9 Line\cf6 > lines;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 long\cf6  \cf5 double\cf6 > points;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     convexHallTrick(\cf9 Line\cf6  l)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 lines\cf6 .\cf10 push_back\cf6 (l);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 void\cf6  addLine(\cf9 Line\cf6  & l)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 while\cf6 (\cf9 lines\cf6 .\cf10 size\cf6 () > \cf8 1\cf6  && \cf11 intersect\cf6 (\cf9 lines\cf6 .\cf10 back\cf6 (), l) < \cf9 points\cf6 .\cf10 back\cf6 ())\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf9 points\cf6 .\cf10 pop_back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf9 lines\cf6 .\cf10 pop_back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 points\cf6 .\cf10 push_back\cf6 (\cf11 intersect\cf6 (l, \cf9 lines\cf6 .\cf10 back\cf6 ()));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 lines\cf6 .\cf10 push_back\cf6 (l);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  getAns(\cf5 long\cf6  \cf5 double\cf6  x)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ind = (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 )(\cf10 upper_bound\cf6 (\cf9 points\cf6 .\cf10 begin\cf6 (), \cf9 points\cf6 .\cf10 end\cf6 (), x) - \cf9 points\cf6 .\cf10 begin\cf6 ());
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 Line\cf6  l = \cf9 lines\cf6 [\cf10 ind\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  l.\cf11 getY\cf6 (x);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main() \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  n; \cf7 cin\cf6  >> n;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > a(n), b(n);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6 (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  i = \cf8 0\cf6 ; i < n; i++)\cf7 cin\cf6  >> a[\cf10 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6 (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  i = \cf8 0\cf6 ; i < n; i++)\cf7 cin\cf6  >> b[\cf10 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 convexHallTrick\cf6  cht(\cf9 Line\cf6 (b[\cf8 0\cf6 ], \cf8 0\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > dp(n, \cf8 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6 (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  i = \cf8 1\cf6 ; i < n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         dp[\cf10 i\cf6 ] = cht.\cf11 getAns\cf6 (a[\cf10 i\cf6 ]);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 Line\cf6  newL(b[\cf10 i\cf6 ], dp[\cf10 i\cf6 ]);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cht.\cf11 addLine\cf6 (newL);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cout\cf6  << dp.\cf10 back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}