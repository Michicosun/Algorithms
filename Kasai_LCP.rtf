{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red46\green13\blue110;\red63\green110\blue116;
\red28\green0\blue207;\red38\green71\blue75;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c14900\c27800\c29400;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <bitset>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  n;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  getSuffArray(\cf7 string\cf6  & s, \cf7 vector\cf6 <\cf5 int\cf6 > & p)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     p.\cf8 resize\cf6 (\cf9 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > c(\cf9 n\cf6 ), cnt(\cf10 256\cf6 , \cf10 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf9 n\cf6 ; i++)cnt[\cf8 s\cf6 [\cf8 i\cf6 ]]++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 1\cf6 ; i < \cf10 256\cf6 ; i++)cnt[\cf8 i\cf6 ] += cnt[\cf8 i\cf6  - \cf10 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf9 n\cf6 ; i++)p[--\cf8 cnt\cf6 [\cf8 s\cf6 [\cf8 i\cf6 ]]] = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     c[\cf8 p\cf6 [\cf10 0\cf6 ]] = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  cl = \cf10 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 1\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (s[\cf8 p\cf6 [\cf8 i\cf6 ]] != s[\cf8 p\cf6 [\cf8 i\cf6  - \cf10 1\cf6 ]])cl++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         c[\cf8 p\cf6 [\cf8 i\cf6 ]] = cl - \cf10 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > pn(\cf9 n\cf6 ), cn(\cf9 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  h = \cf10 0\cf6 ; (\cf10 1\cf6  << h) < \cf9 n\cf6 ; h++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             pn[\cf8 i\cf6 ] = (p[\cf8 i\cf6 ] - (\cf10 1\cf6  << h) + \cf9 n\cf6 ) % \cf9 n\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cnt.\cf8 assign\cf6 (cl, \cf10 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             cnt[\cf8 c\cf6 [\cf8 pn\cf6 [\cf8 i\cf6 ]]]++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 1\cf6 ; i < cl; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             cnt[\cf8 i\cf6 ] += cnt[\cf8 i\cf6  - \cf10 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf9 n\cf6  - \cf10 1\cf6 ; i >= \cf10 0\cf6 ; i--)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             p[--\cf8 cnt\cf6 [\cf8 c\cf6 [\cf8 pn\cf6 [\cf8 i\cf6 ]]]] = pn[\cf8 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cn[\cf8 p\cf6 [\cf10 0\cf6 ]] = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cl = \cf10 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 1\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  mid1 = (p[\cf8 i\cf6 ] + (\cf10 1\cf6  << h)) % \cf9 n\cf6 , mid2 = (p[\cf8 i\cf6  - \cf10 1\cf6 ] + (\cf10 1\cf6  << h)) % \cf9 n\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (c[\cf8 p\cf6 [\cf8 i\cf6 ]] != c[\cf8 p\cf6 [\cf8 i\cf6  - \cf10 1\cf6 ]] || c[\cf8 mid1\cf6 ] != c[\cf8 mid2\cf6 ])cl++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             cn[\cf8 p\cf6 [\cf8 i\cf6 ]] = cl - \cf10 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf8 swap\cf6 (c, cn);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  getLcp(\cf7 string\cf6  & s, \cf7 vector\cf6 <\cf5 int\cf6 > & p, \cf7 vector\cf6 <\cf5 int\cf6 > & lcp)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     lcp.\cf8 resize\cf6 (\cf9 n\cf6  + \cf10 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > pos(\cf9 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 1\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         pos[\cf8 p\cf6 [\cf8 i\cf6 ]] = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  k = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (pos[\cf8 i\cf6 ] == \cf9 n\cf6  - \cf10 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             k = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 continue\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  j = p[\cf8 pos\cf6 [\cf8 i\cf6 ] + \cf10 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 while\cf6  (s[\cf8 i\cf6  + \cf8 k\cf6 ] == s[\cf8 j\cf6  + \cf8 k\cf6 ])\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             k++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         lcp[\cf8 pos\cf6 [\cf8 i\cf6 ]] = k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (k > \cf10 0\cf6 )k--;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  solve(\cf7 string\cf6  & s, \cf7 vector\cf6 <\cf5 int\cf6 > & p, \cf5 int\cf6  ind, \cf5 int\cf6  from, \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < from + k; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cout\cf6  << s[\cf8 p\cf6 [\cf8 ind\cf6 ] + \cf8 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 string\cf6  s; \cf7 cin\cf6  >> s >> k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     s.\cf8 push_back\cf6 (\cf10 '$'\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 n\cf6  = (\cf5 int\cf6 )s.\cf8 size\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > p, lcp;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf11 getSuffArray\cf6 (s, p);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf11 getLcp\cf6 (s, p, lcp);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (\cf9 n\cf6  - \cf10 1\cf6  - p[\cf10 1\cf6 ] >= k)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf11 solve\cf6 (s, p, \cf10 1\cf6 , \cf10 0\cf6 , k);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         k -= (\cf9 n\cf6  - \cf10 1\cf6  - p[\cf10 1\cf6 ]);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 2\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  cnt = \cf9 n\cf6  - \cf10 1\cf6  - p[\cf8 i\cf6 ] - lcp[\cf8 i\cf6  - \cf10 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (cnt >= k)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf11 solve\cf6 (s, p, i, lcp[\cf8 i\cf6  - \cf10 1\cf6 ], k);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 k = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 break\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6             k -= cnt;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (k > \cf10 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 for\cf6  (\cf5 int\cf6  i = p[\cf8 n\cf6  - \cf10 1\cf6 ]; i < \cf9 n\cf6  - \cf10 1\cf6 ; i++)\cf7 cout\cf6  << s[\cf8 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}