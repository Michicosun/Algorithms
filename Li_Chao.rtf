{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cassert>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  std;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 const\cf6  \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  maxN = \cf7 2e6\cf6  + \cf7 10\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  Line\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k, b;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     Line(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k = \cf7 0\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  b = \cf7 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->k = k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->b = b;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  getY(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  k * x + b;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 typedef\cf6  Line * pLine;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  LiChao\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<pLine> t;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     LiChao()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         t.resize(\cf7 4\cf6  * maxN, \cf5 nullptr\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 void\cf6  addLine(pLine l, \cf5 int\cf6  v = \cf7 0\cf6 , \cf5 int\cf6  tl = \cf7 0\cf6 , \cf5 int\cf6  tr = maxN)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (tr - tl < \cf7 1\cf6 )\cf5 return\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6  \cf5 if\cf6  (t[v] == \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             t[v] = l;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6  \cf5 if\cf6  (tr - tl != \cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  mid = (tl + tr) / \cf7 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (t[v]->getY(mid) < l->getY(mid))\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 swap(t[v], l);
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (l->k < t[v]->k)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 addLine(l, \cf7 2\cf6  * v + \cf7 1\cf6 , tl, mid);
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 addLine(l, \cf7 2\cf6  * v + \cf7 2\cf6 , mid, tr);
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  getAns(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x, \cf5 int\cf6  v = \cf7 0\cf6 , \cf5 int\cf6  tl = \cf7 0\cf6 , \cf5 int\cf6  tr = maxN)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (t[v] == \cf5 nullptr\cf6 )\cf5 return\cf6  -\cf7 1e15\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (tr - tl == \cf7 1\cf6 )\cf5 return\cf6  t[v]->getY(x);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  mid = (tl + tr) / \cf7 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (x >= mid)\cf5 return\cf6  max(t[v]->getY(x), getAns(x, \cf7 2\cf6  * v + \cf7 2\cf6 , mid, tr));
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 else\cf6  \cf5 return\cf6  max(t[v]->getY(x), getAns(x, \cf7 2\cf6  * v + \cf7 1\cf6 , tl, mid));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main() \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  n; cin >> n;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > x(n), c(n), t(n);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 0\cf6 ; i < n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cin >> x[i] >> c[i] >> t[i];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         x[i] += \cf7 1e6\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     LiChao tree;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     tree.addLine(\cf5 new\cf6  Line(-c[\cf7 0\cf6 ], c[\cf7 0\cf6 ] * x[\cf7 0\cf6 ]));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     tree.addLine(\cf5 new\cf6  Line(c[\cf7 0\cf6 ], -c[\cf7 0\cf6 ] * x[\cf7 0\cf6 ]));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > dp(n, \cf7 0\cf6 ); dp[\cf7 0\cf6 ] = \cf7 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 1\cf6 ; i < n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         dp[i] = tree.getAns(x[i]) + t[i];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         tree.addLine(\cf5 new\cf6  Line(-c[i], c[i] * x[i] + dp[i]));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         tree.addLine(\cf5 new\cf6  Line(c[i], -c[i] * x[i] + dp[i]));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     cout << dp.back();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf7 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}