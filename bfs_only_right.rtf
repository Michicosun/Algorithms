{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red28\green0\blue207;\red63\green110\blue116;
\red46\green13\blue110;\red38\green71\blue75;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgray\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c14900\c27800\c29400;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  n, m;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 const\cf6  \cf7 vector\cf6 <\cf7 vector\cf6 <\cf5 int\cf6 >> ways = \{\{\cf8 0\cf6 , \cf8 1\cf6 \}, \{\cf8 1\cf6 , \cf8 0\cf6 \}, \{\cf8 0\cf6 , -\cf8 1\cf6 \}, \{-\cf8 1\cf6 , \cf8 0\cf6 \}\};
\f1\fs24 \cf0 \

\f0\fs22 \cf7 vector\cf6 <\cf7 vector\cf6 <\cf5 int\cf6 >> g;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 const\cf6  \cf5 int\cf6  INF = \cf8 1e9\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  vert\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  x, y, d;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vert(\cf5 int\cf6  x = \cf8 0\cf6 , \cf5 int\cf6  y = \cf8 0\cf6 , \cf5 int\cf6  d = \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 x\cf6  = x;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 y\cf6  = y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 d\cf6  = d;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 bool\cf6  can_go()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 vector\cf6 <\cf5 int\cf6 > w = \cf9 ways\cf6 [\cf10 d\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  dx = \cf9 x\cf6  + w[\cf8 0\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  dy = \cf9 y\cf6  + w[\cf8 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  dx >= \cf8 0\cf6  && dx < \cf9 n\cf6  && dy >= \cf8 0\cf6  && dy < \cf9 m\cf6  && \cf9 g\cf6 [\cf10 dx\cf6 ][\cf10 dy\cf6 ] != \cf8 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 vert\cf6  go()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 vector\cf6 <\cf5 int\cf6 > w = \cf9 ways\cf6 [\cf10 d\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 vert\cf6  next_vert = \cf9 vert\cf6 (\cf9 x\cf6  + w[\cf8 0\cf6 ], \cf9 y\cf6  + w[\cf8 1\cf6 ], \cf9 d\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  next_vert;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 vert\cf6  rotate()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 vert\cf6  rot_vert = \cf9 vert\cf6 (\cf9 x\cf6 , \cf9 y\cf6 , (\cf9 d\cf6  + \cf8 1\cf6 ) % \cf8 4\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  rot_vert;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 bool\cf6  \cf5 operator\cf6  < (\cf5 const\cf6  \cf9 vert\cf6  & a, \cf5 const\cf6  \cf9 vert\cf6  & b)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 auto\cf6  p1 = \cf10 make_pair\cf6 (a.\cf9 x\cf6 , \cf10 make_pair\cf6 (a.\cf9 y\cf6 , a.\cf9 d\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 auto\cf6  p2 = \cf10 make_pair\cf6 (b.\cf9 x\cf6 , \cf10 make_pair\cf6 (b.\cf9 y\cf6 , b.\cf9 d\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  p1 < p2;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  relax(\cf7 queue\cf6 <\cf9 vert\cf6 > & q, \cf7 map\cf6 <\cf9 vert\cf6 , \cf5 int\cf6 > & dist, \cf9 vert\cf6  & v)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v.\cf11 can_go\cf6 ())\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 vert\cf6  new_v = v.\cf11 go\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (dist[\cf10 new_v\cf6 ] > dist[\cf10 v\cf6 ] + \cf8 1\cf6  || dist[\cf10 new_v\cf6 ] == \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             dist[\cf10 new_v\cf6 ] = dist[\cf10 v\cf6 ] + \cf8 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             q.\cf10 push\cf6 (new_v);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 vert\cf6  new_v = v.\cf11 rotate\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (new_v.\cf11 can_go\cf6 ())\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         new_v = new_v.\cf11 go\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (dist[\cf10 new_v\cf6 ] > dist[\cf10 v\cf6 ] + \cf8 1\cf6  || dist[\cf10 new_v\cf6 ] == \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             dist[\cf10 new_v\cf6 ] = dist[\cf10 v\cf6 ] + \cf8 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             q.\cf10 push\cf6 (new_v);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  bfs(\cf5 int\cf6  x1, \cf5 int\cf6  y1, \cf5 int\cf6  x2, \cf5 int\cf6  y2)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 queue\cf6 <\cf9 vert\cf6 > q;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 map\cf6 <\cf9 vert\cf6 , \cf5 int\cf6 > dist;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     q.\cf10 push\cf6 (\cf9 vert\cf6 (x1, y1, \cf8 0\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     q.\cf10 push\cf6 (\cf9 vert\cf6 (x1, y1, \cf8 1\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     q.\cf10 push\cf6 (\cf9 vert\cf6 (x1, y1, \cf8 2\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     q.\cf10 push\cf6 (\cf9 vert\cf6 (x1, y1, \cf8 3\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     dist[\cf10 vert\cf6 (\cf10 x1\cf6 , \cf10 y1\cf6 , \cf8 0\cf6 )] = \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     dist[\cf10 vert\cf6 (\cf10 x1\cf6 , \cf10 y1\cf6 , \cf8 1\cf6 )] = \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     dist[\cf10 vert\cf6 (\cf10 x1\cf6 , \cf10 y1\cf6 , \cf8 2\cf6 )] = \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     dist[\cf10 vert\cf6 (\cf10 x1\cf6 , \cf10 y1\cf6 , \cf8 3\cf6 )] = \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 while\cf6  (!q.\cf10 empty\cf6 ())\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 vert\cf6  v = q.\cf10 front\cf6 (); q.\cf10 pop\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf11 relax\cf6 (q, dist, v);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  ans = \cf9 INF\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf8 0\cf6 ; i < \cf8 4\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf9 vert\cf6  f = \cf9 vert\cf6 (x2, y2, i);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (dist[\cf10 f\cf6 ] != \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             ans = \cf10 min\cf6 (dist[\cf10 f\cf6 ], ans);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  ans;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cin\cf6  >> \cf9 n\cf6  >> \cf9 m\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 string\cf6  s;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf10 getline\cf6 (\cf7 cin\cf6 , s);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  x1, y1, x2, y2;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 g\cf6  = \cf7 vector\cf6 <\cf7 vector\cf6 <\cf5 int\cf6 >>(\cf9 n\cf6 , \cf7 vector\cf6 <\cf5 int\cf6 >(\cf9 m\cf6 , \cf8 0\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf8 0\cf6 ; i < \cf9 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf10 getline\cf6 (\cf7 cin\cf6 , s);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  j = \cf8 0\cf6 ; j < \cf9 m\cf6 ; j++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (s[\cf10 j\cf6 ] == \cf8 'X'\cf6 )\cf9 g\cf6 [\cf10 i\cf6 ][\cf10 j\cf6 ] = \cf8 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 else\cf6  \cf5 if\cf6  (s[\cf10 j\cf6 ] == \cf8 'S'\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 x1 = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 y1 = j;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}\cf5 else\cf6  \cf5 if\cf6  (s[\cf10 j\cf6 ] == \cf8 'F'\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 x2 = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 y2 = j;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cout\cf6  << \cf11 bfs\cf6 (x1, y1, x2, y2);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}