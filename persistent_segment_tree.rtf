{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red63\green110\blue116;\red28\green0\blue207;
\red38\green71\blue75;\red46\green13\blue110;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c18100\c5200\c43100;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cassert>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  n, m;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  node\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 node\cf6  * l;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 node\cf6  * r;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  summ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     node(\cf5 int\cf6  summ = \cf9 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 l\cf6  = \cf5 nullptr\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 r\cf6  = \cf5 nullptr\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 summ\cf6  = summ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     node(\cf8 node\cf6  * l, \cf8 node\cf6  * r)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 l\cf6  = l;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 r\cf6  = r;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 summ\cf6  = \cf9 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (l)\cf5 this\cf6 ->\cf8 summ\cf6  += l->\cf8 summ\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (r)\cf5 this\cf6 ->\cf8 summ\cf6  += r->\cf8 summ\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 typedef\cf6  \cf8 node\cf6  * pnode;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  get_summ(\cf8 pnode\cf6  r)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (r)\cf5 return\cf6  r->\cf8 summ\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 else\cf6  \cf5 return\cf6  \cf9 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf7 vector\cf6 <\cf8 pnode\cf6 > roots;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  build(\cf5 int\cf6  tl, \cf5 int\cf6  tr)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (tr - tl == \cf9 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  \cf5 new\cf6  \cf8 node\cf6 (\cf9 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  mid = (tl + tr) / \cf9 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf8 pnode\cf6  left = \cf10 build\cf6 (tl, mid);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf8 pnode\cf6  right = \cf10 build\cf6 (mid, tr);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  \cf5 new\cf6  \cf8 node\cf6 (left, right);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  update(\cf8 pnode\cf6  n, \cf5 int\cf6  tl, \cf5 int\cf6  tr, \cf5 int\cf6  ind, \cf5 int\cf6  d)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (tr - tl == \cf9 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  \cf5 new\cf6  \cf8 node\cf6 (\cf10 get_summ\cf6 (n) + d);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  mid = (tl + tr) / \cf9 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (ind < mid)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 return\cf6  \cf5 new\cf6  \cf8 node\cf6 (\cf10 update\cf6 (n->\cf8 l\cf6 , tl, mid, ind, d), n->\cf8 r\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 return\cf6  \cf5 new\cf6  \cf8 node\cf6 (n->\cf8 l\cf6 , \cf10 update\cf6 (n->\cf8 r\cf6 , mid, tr, ind, d));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  print(\cf8 pnode\cf6  r, \cf5 int\cf6  tl = \cf9 0\cf6 , \cf5 int\cf6  tr = \cf8 n\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (r)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cout\cf6  << tl << \cf4 " "\cf6  << tr << \cf4 " : "\cf6  << \cf10 get_summ\cf6 (r) << \cf4 " l = "\cf6  << \cf10 get_summ\cf6 (r->\cf8 l\cf6 ) << \cf4 " r = "\cf6  << \cf10 get_summ\cf6 (r->\cf8 r\cf6 ) << \cf11 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf10 print\cf6 (r->\cf8 l\cf6 , tl, (tl + tr) / \cf9 2\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf10 print\cf6 (r->\cf8 r\cf6 , (tl + tr) / \cf9 2\cf6 , tr);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  getL(\cf8 pnode\cf6  r, \cf5 int\cf6  k, \cf5 int\cf6  tl, \cf5 int\cf6  tr)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (tr - tl == \cf9 1\cf6 )\cf5 return\cf6  tl;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  mid = (tl + tr) / \cf9 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (\cf10 get_summ\cf6 (r->\cf8 l\cf6 ) >= k)\cf5 return\cf6  \cf10 getL\cf6 (r->\cf8 l\cf6 , k, tl, mid);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6  \cf5 return\cf6  \cf10 getL\cf6 (r->\cf8 r\cf6 , k - \cf10 get_summ\cf6 (r->\cf8 l\cf6 ), mid, tr);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main() \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cin\cf6  >> \cf8 n\cf6  >> \cf8 m\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > a(\cf8 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 roots\cf6 .\cf11 push_back\cf6 (\cf10 build\cf6 (\cf9 0\cf6 , \cf8 n\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf9 0\cf6 ; i < \cf8 n\cf6 ; i++)\cf7 cin\cf6  >> a[\cf11 i\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > last_ind(\cf8 m\cf6  + \cf9 1\cf6 , -\cf9 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf8 n\cf6  - \cf9 1\cf6 ; i >= \cf9 0\cf6 ; i--)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (last_ind[\cf11 a\cf6 [\cf11 i\cf6 ]] == -\cf9 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             last_ind[\cf11 a\cf6 [\cf11 i\cf6 ]] = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 roots\cf6 .\cf11 push_back\cf6 (\cf10 update\cf6 (\cf8 roots\cf6 .\cf11 back\cf6 (), \cf9 0\cf6 , \cf8 n\cf6 , i, \cf9 1\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 roots\cf6 .\cf11 push_back\cf6 (\cf10 update\cf6 (\cf8 roots\cf6 .\cf11 back\cf6 (), \cf9 0\cf6 , \cf8 n\cf6 , last_ind[\cf11 a\cf6 [\cf11 i\cf6 ]], -\cf9 1\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 roots\cf6 .\cf11 back\cf6 () = \cf10 update\cf6 (\cf8 roots\cf6 .\cf11 back\cf6 (), \cf9 0\cf6 , \cf8 n\cf6 , i, \cf9 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6             last_ind[\cf11 a\cf6 [\cf11 i\cf6 ]] = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf11 reverse\cf6 (\cf8 roots\cf6 .\cf11 begin\cf6 (), \cf8 roots\cf6 .\cf11 end\cf6 ());
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  q; \cf7 cin\cf6  >> q;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  p = \cf9 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf9 0\cf6 ; i < q; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  x, y; \cf7 cin\cf6  >> x >> y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  l = ((x + p) % \cf8 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  k = ((y + p) % \cf8 m\cf6 ) + \cf9 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (\cf10 get_summ\cf6 (\cf8 roots\cf6 [\cf11 l\cf6 ]) < k)p = -\cf9 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6  p = \cf10 getL\cf6 (\cf8 roots\cf6 [\cf11 l\cf6 ], k, \cf9 0\cf6 , \cf8 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         p++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cout\cf6  << p << \cf11 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf9 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}