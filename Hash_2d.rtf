{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cstdio>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <functional>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <regex>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <deque>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <string>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  std::vector;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::cin;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::cout;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::endl;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::deque;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::pair;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::swap;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::string;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::unordered_map;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::reverse;
\f1\fs24 \cf0 \

\f0\fs22 \cf5 using\cf6  std::min;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  coord\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x, y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     coord(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x = -\cf7 1\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  y = -\cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->x = x;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->y = y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  Hash_2D\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  p, q;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  mod = \cf7 1275349729\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > pows_p;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > pows_q;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 >> h;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  n, m;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     Hash_2D(\cf5 const\cf6  vector<string> & board, \cf5 int\cf6  p, \cf5 int\cf6  q)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->p = p;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->q = q;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         n = (\cf5 int\cf6 )board.size();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         m = (\cf5 int\cf6 )board[\cf7 0\cf6 ].size();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         pows_p.resize(n + \cf7 1\cf6 , \cf7 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         pows_q.resize(m + \cf7 1\cf6 , \cf7 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         h.resize(n + \cf7 1\cf6 , vector<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 >(m + \cf7 1\cf6 , \cf7 0\cf6 ));
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 1\cf6 ; i <= n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             pows_p[i] = (pows_p[i - \cf7 1\cf6 ] * p) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 1\cf6 ; i <= m; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             pows_q[i] = (pows_q[i - \cf7 1\cf6 ] * q) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 1\cf6 ; i <= n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 for\cf6  (\cf5 int\cf6  j = \cf7 1\cf6 ; j <= m; j++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  left = (h[i][j - \cf7 1\cf6 ] * q) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  top = (h[i - \cf7 1\cf6 ][j] * p) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  left_top = ((h[i - \cf7 1\cf6 ][j - \cf7 1\cf6 ] * p) % mod * q) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 h[i][j] = (left + top - left_top + board[i - \cf7 1\cf6 ][j - \cf7 1\cf6 ] + mod) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  get_sub_matrix(coord c1, coord c2)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         c1.x++; c1.y++; c2.x++; c2.y++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  p_p = pows_p[c2.x - c1.x + \cf7 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  p_q = pows_q[c2.y - c1.y + \cf7 1\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  left = (h[c2.x][c1.y - \cf7 1\cf6 ] * p_q) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  top = (h[c1.x - \cf7 1\cf6 ][c2.y] * p_p) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  left_top = ((h[c1.x - \cf7 1\cf6 ][c1.y - \cf7 1\cf6 ] * p_p) % mod * p_q) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  now = h[c2.x][c2.y];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  (now - left - top + left_top + \cf7 2\cf6  * mod) % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 bool\cf6  \cf5 operator\cf6  < (\cf5 const\cf6  coord & a, \cf5 const\cf6  coord & b)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  a.x < b.x || (a.x == b.x && a.y < b.y);
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  triple\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k1, k2, x, y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     triple(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k1 = -\cf7 1\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  k2 = -\cf7 1\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x = -\cf7 1\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  y = -\cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->k1 = k1;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->k2 = k2;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->x = x;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->y = y;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  hash_table\{
\f1\fs24 \cf0 \

\f0\fs22 \cf5 private\cf6 :
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 static\cf6  \cf5 const\cf6  \cf5 int\cf6  mod = \cf7 997\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<vector<vector<triple>>> t;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     
\f1\fs24 \cf0 \

\f0\fs22 \cf5 public\cf6 :
\f1\fs24 \cf0 \

\f0\fs22 \cf6     hash_table()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         t.resize(mod, vector<vector<triple>>(mod));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 void\cf6  push(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  arg1, \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  arg2, \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  x, \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  y)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ind1 = arg1 % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ind2 = arg2 % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         triple p(arg1, arg2, x, y);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 0\cf6 ; i < (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 )t[ind1][ind2].size(); i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (t[ind1][ind2][i].k1 == p.k1 && t[ind1][ind2][i].k2 == p.k2 && t[ind1][ind2][i].x == p.x && t[ind1][ind2][i].y == p.y)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 return\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         t[ind1][ind2].push_back(p);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     pair<\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 , \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 > get(\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  arg1, \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  arg2) \cf5 const\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ind1 = arg1 % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ind2 = arg2 % mod;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 0\cf6 ; i < (\cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6 )t[ind1][ind2].size(); i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (t[ind1][ind2][i].k1 == arg1 && t[ind1][ind2][i].k2 == arg2)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 return\cf6  \{t[ind1][ind2][i].x, t[ind1][ind2][i].y\};
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 return\cf6  \{-\cf7 1\cf6 , -\cf7 1\cf6 \};
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\
\

\f0\fs22 \cf6 pair<coord, coord> check(\cf5 int\cf6  mid, Hash_2D & h, Hash_2D & h2)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     hash_table mp;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 0\cf6 ; i <= h.n - mid; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  j = \cf7 0\cf6 ; j <= h.m - mid; j++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ans_hash1 = h.get_sub_matrix(\{i, j\}, \{i + mid - \cf7 1\cf6 , j + mid - \cf7 1\cf6 \});
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 long\cf6  \cf5 long\cf6  \cf5 int\cf6  ans_hash2 = h2.get_sub_matrix(\{i, j\}, \{i + mid - \cf7 1\cf6 , j + mid - \cf7 1\cf6 \});
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (mp.get(ans_hash1, ans_hash2).first == -\cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 mp.push(ans_hash1, ans_hash2, i, j);
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 auto\cf6  p = mp.get(ans_hash1, ans_hash2);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 coord c1(p.first, p.second);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 coord c2(i, j);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf5 return\cf6  \{c1, c2\};
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \{\{-\cf7 1\cf6 , -\cf7 1\cf6 \}, \{-\cf7 1\cf6 , -\cf7 1\cf6 \}\};
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     std::ios_base::sync_with_stdio(\cf7 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     cin.tie(\cf7 0\cf6 ); cout.tie(\cf7 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  n, m; cin >> n >> m;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     vector<string> board(n);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf7 0\cf6 ; i < n; i++)cin >> board[i];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     Hash_2D h(board, \cf7 229\cf6 , \cf7 313\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     Hash_2D h2(board, \cf7 401\cf6 , \cf7 409\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  l = \cf7 0\cf6 , r = min(n, m) + \cf7 1\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     pair<coord, coord> it;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 while\cf6  (r - l > \cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  mid = (l + r) / \cf7 2\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         it = check(mid, h, h2);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (it.first.x != -\cf7 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             l = mid;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             r = mid;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     cout << l << endl;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (l > \cf7 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         it = check(l, h, h2);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cout << it.first.x + \cf7 1\cf6  << \cf4 " "\cf6  << it.first.y + \cf7 1\cf6  << endl;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         cout << it.second.x + \cf7 1\cf6  << \cf4 " "\cf6  << it.second.y + \cf7 1\cf6  << endl;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf7 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}