{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red63\green110\blue116;\red46\green13\blue110;
\red38\green71\blue75;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c18100\c5200\c43100;
\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <queue>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cassert>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  n;
\f1\fs24 \cf0 \

\f0\fs22 \cf7 vector\cf6 <\cf7 vector\cf6 <\cf7 pair\cf6 <\cf5 int\cf6 , \cf5 int\cf6 >>> g;
\f1\fs24 \cf0 \

\f0\fs22 \cf7 vector\cf6 <\cf5 bool\cf6 > used;
\f1\fs24 \cf0 \

\f0\fs22 \cf7 vector\cf6 <\cf5 int\cf6 > ans;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  dfs(\cf5 int\cf6  v)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 while\cf6  (!\cf8 g\cf6 [\cf9 v\cf6 ].\cf9 empty\cf6 ())\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (!\cf8 used\cf6 [\cf9 g\cf6 [\cf9 v\cf6 ].\cf9 back\cf6 ().\cf9 second\cf6 ])\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 auto\cf6  to = \cf8 g\cf6 [\cf9 v\cf6 ].\cf9 back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 used\cf6 [\cf9 to\cf6 .\cf9 second\cf6 ] = \cf5 true\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 g\cf6 [\cf9 v\cf6 ].\cf9 pop_back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf10 dfs\cf6 (to.\cf7 first\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf8 g\cf6 [\cf9 v\cf6 ].\cf9 pop_back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 ans\cf6 .\cf9 push_back\cf6 (v);
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 freopen\cf6 (\cf4 "euler.in"\cf6 , \cf4 "r"\cf6 , \cf2 stdin\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf9 freopen\cf6 (\cf4 "euler.out"\cf6 , \cf4 "w"\cf6 , \cf2 stdout\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cin\cf6  >> \cf8 n\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 g\cf6 .\cf9 resize\cf6 (\cf8 n\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  start = \cf11 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  ind = \cf11 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  summ = \cf11 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf11 0\cf6 ; i < \cf8 n\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  k; \cf7 cin\cf6  >> k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         summ += k;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (k % \cf11 2\cf6  == \cf11 1\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             start = i;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  j = \cf11 0\cf6 ; j < k; j++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  to; \cf7 cin\cf6  >> to; to--;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (i <= to)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf8 g\cf6 [\cf9 i\cf6 ].\cf9 push_back\cf6 (\{to, ind\});
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf8 g\cf6 [\cf9 to\cf6 ].\cf9 push_back\cf6 (\{i, ind\});
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 ind++;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 used\cf6 .\cf9 resize\cf6 (ind, \cf5 false\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf10 dfs\cf6 (start);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf2 assert\cf6 (summ / \cf11 2\cf6  == \cf8 ans\cf6 .\cf9 size\cf6 () - \cf11 1\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cout\cf6  << \cf8 ans\cf6 .\cf9 size\cf6 () - \cf11 1\cf6  << \cf9 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 auto\cf6  i : \cf8 ans\cf6 )\cf7 cout\cf6  << i + \cf11 1\cf6  << \cf4 " "\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf11 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}