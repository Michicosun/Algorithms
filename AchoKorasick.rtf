{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red63\green110\blue116;\red46\green13\blue110;
\red28\green0\blue207;\red38\green71\blue75;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c18100\c5200\c43100;
\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c14900\c27800\c29400;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <cmath>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <algorithm>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <unordered_map>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <set>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <deque>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  node\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 char\cf6  c;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 bool\cf6  term;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 bool\cf6  used;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 node\cf6  * suffLink;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 node\cf6  * pred;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 node\cf6  * termlink;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf8 node\cf6  *> suffGo;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf8 node\cf6  *> next;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 int\cf6 > ind;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     node()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 used\cf6  = \cf5 false\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 pred\cf6  = \cf5 nullptr\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 suffLink\cf6  = \cf5 nullptr\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 termlink\cf6  = \cf5 nullptr\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 suffGo\cf6 .\cf9 resize\cf6 (\cf10 26\cf6 , \cf5 nullptr\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 next\cf6 .\cf9 resize\cf6 (\cf10 26\cf6 , \cf5 nullptr\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 term\cf6  = \cf5 false\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 c\cf6  = \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf8 ind\cf6  = \{\};
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 typedef\cf6  \cf8 node\cf6  * pnode;
\f1\fs24 \cf0 \

\f0\fs22 \cf8 pnode\cf6  root;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  add(\cf5 const\cf6  \cf7 string\cf6  & s, \cf5 int\cf6  ind)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 pnode\cf6  v = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < s.\cf9 size\cf6 (); i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 int\cf6  c = s[\cf9 i\cf6 ] - \cf10 'a'\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (v->\cf8 next\cf6 [\cf9 c\cf6 ] == \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 next\cf6 [\cf9 c\cf6 ] = \cf5 new\cf6  \cf8 node\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 next\cf6 [\cf9 c\cf6 ]->\cf8 pred\cf6  = v;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 next\cf6 [\cf9 c\cf6 ]->\cf8 c\cf6  = c;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         v = v->\cf8 next\cf6 [\cf9 c\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     v->\cf8 term\cf6  = \cf5 true\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     v->\cf8 ind\cf6 .\cf9 push_back\cf6 (ind);
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  print(\cf8 pnode\cf6  v, \cf7 string\cf6  s)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (!v)\cf5 return\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 else\cf6  \cf5 if\cf6  (v->\cf8 term\cf6 )\cf7 cout\cf6  << s << \cf9 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < \cf10 26\cf6 ; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 char\cf6  c = (\cf5 char\cf6 )(i + \cf10 'a'\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (v->\cf8 next\cf6 [\cf9 i\cf6 ])\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 s.\cf9 push_back\cf6 (c);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 \cf11 print\cf6 (v->\cf8 next\cf6 [\cf9 i\cf6 ], s);
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 s.\cf9 pop_back\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  go(\cf8 pnode\cf6  v, \cf5 char\cf6  c);
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  get_link(\cf8 pnode\cf6  v)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v->\cf8 suffLink\cf6  == \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (v == \cf8 root\cf6  || v->\cf8 pred\cf6  == \cf8 root\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 suffLink\cf6  = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 suffLink\cf6  = \cf11 go\cf6 (\cf11 get_link\cf6 (v->\cf8 pred\cf6 ), v->\cf8 c\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  v->\cf8 suffLink\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  go(\cf8 pnode\cf6  v, \cf5 char\cf6  c)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v->\cf8 suffGo\cf6 [\cf9 c\cf6 ] == \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (v->\cf8 next\cf6 [\cf9 c\cf6 ] != \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             v->\cf8 suffGo\cf6 [\cf9 c\cf6 ] = v->\cf8 next\cf6 [\cf9 c\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}\cf5 else\cf6 \{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (v == \cf8 root\cf6 )v->\cf8 suffGo\cf6 [\cf9 c\cf6 ] = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 else\cf6  v->\cf8 suffGo\cf6 [\cf9 c\cf6 ] = \cf11 go\cf6 (\cf11 get_link\cf6 (v), c);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  v->\cf8 suffGo\cf6 [\cf9 c\cf6 ];
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf8 pnode\cf6  getTerm(\cf8 pnode\cf6  v)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v == \cf8 root\cf6 )\cf5 return\cf6  \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v->\cf8 termlink\cf6  == \cf5 nullptr\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (\cf11 get_link\cf6 (v)->\cf8 term\cf6 )v->\cf8 termlink\cf6  = \cf11 get_link\cf6 (v);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6  v->\cf8 termlink\cf6  = \cf11 getTerm\cf6 (\cf11 get_link\cf6 (v));
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  v->\cf8 termlink\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  init()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 root\cf6  = \cf5 new\cf6  \cf8 node\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 root\cf6 ->\cf8 pred\cf6  = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 root\cf6 ->\cf8 suffLink\cf6  = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 root\cf6 ->\cf8 termlink\cf6  = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 void\cf6  calc(\cf8 pnode\cf6  v, \cf7 vector\cf6 <\cf5 bool\cf6 > & is)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v->\cf8 used\cf6 )\cf5 return\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (v->\cf8 term\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 auto\cf6  ind : v->\cf8 ind\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             is[\cf9 ind\cf6 ] = \cf5 true\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     v->\cf8 used\cf6  = \cf5 true\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf11 calc\cf6 (\cf11 getTerm\cf6 (v), is);
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 signed\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 ios_base\cf6 ::\cf9 sync_with_stdio\cf6 (\cf10 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cin\cf6 .\cf9 tie\cf6 (\cf10 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cout\cf6 .\cf9 tie\cf6 (\cf10 0\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf11 init\cf6 ();
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  n; \cf7 cin\cf6  >> n;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < n; i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 string\cf6  s; \cf7 cin\cf6  >> s;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf11 add\cf6 (s, i);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6 <\cf5 bool\cf6 > is(n, \cf5 false\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 string\cf6  t; \cf7 cin\cf6  >> t;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf8 pnode\cf6  v = \cf8 root\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf10 0\cf6 ; i < t.\cf9 size\cf6 (); i++)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 char\cf6  c = (t[\cf9 i\cf6 ] - \cf10 'a'\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6         v = \cf11 go\cf6 (v, c);
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf11 calc\cf6 (v, is);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 auto\cf6  i : is)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 if\cf6  (i)\cf7 cout\cf6  << \cf4 "YES\\n"\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 else\cf6  \cf7 cout\cf6  << \cf4 "NO\\n"\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf10 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
\
}