{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red170\green13\blue145;\red0\green0\blue0;\red92\green38\blue153;\red28\green0\blue207;\red63\green110\blue116;
\red46\green13\blue110;}
{\*\expandedcolortbl;;\csgenericrgb\c39100\c22000\c12500;\csgray\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c18100\c5200\c43100;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 #include\cf4 <iostream>
\f1\fs24 \cf0 \

\f0\fs22 \cf2 #include\cf4 <vector>
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 using\cf6  \cf5 namespace\cf6  \cf7 std\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 const\cf6  \cf5 int\cf6  INF = \cf8 1e9\cf6 ;
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 struct\cf6  edge\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  s, f, w;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     edge(\cf5 int\cf6  s = \cf8 0\cf6 , \cf5 int\cf6  f = \cf8 0\cf6 , \cf5 int\cf6  w = \cf8 0\cf6 )\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 s\cf6  = s;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 f\cf6  = f;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 this\cf6 ->\cf9 w\cf6  = w;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \};
\f1\fs24 \cf0 \
\

\f0\fs22 \cf5 int\cf6  main()\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 int\cf6  n, m, k, s, f;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 cin\cf6  >> n >> m >> k >> s >> f;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6  <\cf5 int\cf6 > dist(n + \cf8 1\cf6 , \cf9 INF\cf6 );
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6  <\cf5 int\cf6 > dist_new;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     dist[\cf10 s\cf6 ] = \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf7 vector\cf6  <\cf9 edge\cf6 > edges(m);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf8 0\cf6 ; i < m; ++i)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cin\cf6  >> edges[\cf10 i\cf6 ].\cf9 s\cf6  >> edges[\cf10 i\cf6 ].\cf9 f\cf6  >> edges[\cf10 i\cf6 ].\cf9 w\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 for\cf6  (\cf5 int\cf6  i = \cf8 0\cf6 ; i < k; ++i)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6         dist_new = dist;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf5 for\cf6  (\cf5 auto\cf6  & edge : edges)\{
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  start = edge.\cf9 s\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  end = edge.\cf9 f\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 int\cf6  price = edge.\cf9 w\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6             \cf5 if\cf6  (dist[\cf10 start\cf6 ] + price < dist_new[\cf10 end\cf6 ])
\f1\fs24 \cf0 \

\f0\fs22 \cf6                 dist_new[\cf10 end\cf6 ] = dist[\cf10 start\cf6 ] + price;
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf10 swap\cf6 (dist, dist_new);
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \}
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 if\cf6  (dist[\cf10 f\cf6 ] == \cf9 INF\cf6 )
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cout\cf6  << -\cf8 1\cf6  << \cf10 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 else
\f1\fs24 \cf0 \

\f0\fs22 \cf6         \cf7 cout\cf6  << dist[\cf10 f\cf6 ] << \cf10 endl\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6     \cf5 return\cf6  \cf8 0\cf6 ;
\f1\fs24 \cf0 \

\f0\fs22 \cf6 \}
\f1\fs24 \cf0 \
}